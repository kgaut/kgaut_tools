<?php

use  Drupal\Core\Field\BaseFieldDefinition;
/**
 * Implements hook_preprocess_HOOK().
 */
function kgaut_tools_paragraphs_preprocess_paragraph(&$variables) {
  /** @var \Drupal\paragraphs\ParagraphInterface $paragraph */
  $paragraph = $variables['elements']['#paragraph'];
  $variables['type'] = (FALSE !== strpos($paragraph->bundle(), '_and_')) ? 'double' : 'simple';
  if ($variables['type'] === 'double' && $paragraph->get('layout')->value === 'reverse') {
    $weight = 1;
    foreach ($variables['content'] as &$contentItem) {
      $contentItem['#weight'] = $weight--;
    }
  }
}

function kgaut_tools_paragraphs_theme_suggestions_paragraph_alter(array &$suggestions, array $variables) {
  /** @var \Drupal\paragraphs\ParagraphInterface $paragraph */
  $paragraph = $variables['elements']['#paragraph'];
  if (FALSE !== strpos($paragraph->bundle(), '_and_')) {
    $suggestions[] = 'paragraph__double';
  }
}

function kgaut_tools_paragraphs_entity_base_field_info(\Drupal\Core\Entity\EntityTypeInterface $entity_type) {
  $fields = [];
  if ($entity_type->id() === 'paragraph') {
    $fields['layout'] = BaseFieldDefinition::create('list_string')
      ->setLabel(t('Layout'))
      ->setSetting('allowed_values', [
        'normal' => 'Current',
        'reverse' => 'Reverse',
      ])
      ->setDefaultValue('normal')
      ->setRequired(TRUE)
      ->setDisplayConfigurable('form', TRUE);

    $fields['grid'] = BaseFieldDefinition::create('list_string')
      ->setLabel(t('Grid'))
      ->setSetting('allowed_values', [
        '6_6' => 'Equal size',
        '8_4' => '66% - 33% (8/12 - 4/12)',
        '4_8' => '33% - 66% (4/12 - 8/12)',
        '10_2' => '83% - 17% (10/12 - 2/12)',
        '2_10' => '17% - 83% (2/12 - 10/12)',
      ])
      ->setDefaultValue('50_50')
      ->setRequired(TRUE)
      ->setDisplayConfigurable('form', TRUE);
  }
  return $fields;
}
